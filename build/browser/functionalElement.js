const createUseState=a=>{const b=b=>a._dynamicState.get(b),c=(b,c)=>{const d=new Map(Array.from(a._dynamicState.entries()));d.set(b,c),a._dynamicState=d};return(d=null)=>{const e=a._stateKey;void 0===b(e)&&c(e,d);return a._stateKey++,[b(e),a=>{c(e,a)}]}},createUseEffect=a=>{const b=b=>a._effectsState.get(b),c=(b,c)=>{const d=new Map(Array.from(a._effectsState.entries()));d.set(b,c),a._effectsState=d},d=b=>{a._effects.push(b)},e=(a,c)=>{const d=b(c);if(0===d.length)return!1;for(let b=0;b<a.length;b++)if(d[b]!==a[b])return!0;return!1};return(f,g=void 0)=>{if(void 0===g)return void d(f);const h=a._effectKey;return void 0===b(h)?(c(h,g),void d(f)):void(e(g,h)&&d(f),c(h,g),a._effectKey++)}},createUseReducer=a=>{const b=b=>a._dynamicReducerState.get(b),c=(b,c)=>{const d=new Map(Array.from(a._dynamicReducerState.entries()));d.set(b,c),a._dynamicReducerState=d};return(d,e)=>{const f=a._reducerStateKey;void 0===b(f)&&c(f,e);return a._reducerStateKey++,[b(f),a=>{const e=d(b(f),a);c(f,e)}]}},createUseContext=a=>b=>{const{_contextName:c,...d}=a._context[b._contextName];return d},createContextProvider=a=>{const{directive:b,PropertyPart:c}=a;return a=>{const d=weakUUID(),e=b((b=a)=>a=>{if(!(a instanceof c))throw new Error("context directive can only be used in property bindings");b._contextName=d,a.setValue(b),a.commit(),setContext(a.committer.element,b)});return e._contextName=d,e}},setContext=(a,b)=>{isCustomElement(a.localName)&&("undefined"==typeof a._context&&(a._context={}),a._context[b._contextName]=b),Array.from(a.children).forEach(a=>{setContext(a,b)})},isCustomElement=a=>a.includes("-"),weakUUID=()=>{function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()};var functionalElementProvider=a=>{const{LitElement:b,createUseState:c,createUseEffect:d,createUseReducer:e,createUseContext:f}=a;return(a,g={},h=[])=>class extends b{static get properties(){const a={_dynamicState:{type:Object},_dynamicReducerState:{type:Object},_context:{type:Object}};return Object.assign({},a,g)}static get styles(){return h}constructor(){super(),this._dynamicReducerState=new Map,this._dynamicState=new Map,this._context={},this._reducerStateKey=0,this._stateKey=0,this._effectKey=0,this._effects=[],this._effectsState=new Map}_resetHooks(){this._stateKey=0,this._reducerStateKey=0,this._effectKey=0,this._effects=[]}_runEffects(){return this._effects.map(a=>new Promise((b,c)=>{try{return b(a())}catch(a){c(a)}}))}render(){super.render(),this._resetHooks();const b={useState:c(this),useEffect:d(this),useReducer:e(this),useContext:f(this)},g=a(this,b);return this._runEffects(),g}}};const createContextFactory=(a,b)=>createContextProvider({directive:a,PropertyPart:b}),functionalElementFactory=a=>functionalElementProvider({LitElement:a,createUseState,createUseEffect,createUseReducer,createUseContext});export default functionalElementFactory;export{createContextFactory};
//# sourceMappingURL=functionalElement.js.map
