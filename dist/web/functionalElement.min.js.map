{"version":3,"file":"functionalElement.min.js","sources":["../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/render.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/modify-template.js","../../node_modules/lit-html/lib/shady-render.js","../../node_modules/lit-element/lib/updating-element.js","../../node_modules/lit-element/lib/css-tag.js","../../node_modules/lit-element/lit-element.js","../../src/hooks/useState.js","../../src/hooks/useEffect.js","../../src/hooks/useReducer.js","../../src/hooks/useContext.js","../../src/functionalElement.js","../../src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","\r\nexport const createUseState = (element) => {\r\n\r\n    const getState = (key) => {\r\n        return element._dynamicState.get(key);\r\n    };\r\n\r\n    const setState = (key, value)  => {\r\n        const newState = new Map(Array.from(element._dynamicState.entries()));\r\n        newState.set(key, value);\r\n        element._dynamicState = newState;\r\n    };\r\n\r\n    return (defaultValue = null) => {\r\n        const currentStateKey = element._stateKey;\r\n\r\n        if (getState(currentStateKey) === undefined) {\r\n            setState(currentStateKey, defaultValue);\r\n        }\r\n\r\n        const changeValue = (newValue) => {\r\n            setState(currentStateKey, newValue)\r\n        };\r\n\r\n        const valueAndChanger = [getState(currentStateKey), changeValue];\r\n        element._stateKey++;\r\n        return valueAndChanger;\r\n    };\r\n};","\r\nexport const createUseEffect = (element) => {\r\n    return (effect, stateToWatch = []) => {\r\n        if (element._hookState[element._hookKey] === undefined) {\r\n            element._hookState[element._hookKey] = Array.of(stateToWatch.map(() => undefined));\r\n        }\r\n\r\n        if (stateToWatch.length === 0) {\r\n            element._hookState[element._hookKey] = stateToWatch;\r\n            element._hooks[element._hookKey] = effect;\r\n            element._hookKey++;\r\n            return;\r\n        }\r\n\r\n        for(let i = 0; i < stateToWatch.length; i++) {\r\n            if (element._hookState[element._hookKey][i] !== stateToWatch[i]) {\r\n                element._hooks[element._hookKey] = effect;\r\n            }\r\n        }\r\n        element._hookState[element._hookKey] = stateToWatch;\r\n        element._hookKey++;\r\n    }\r\n};\r\n\r\nexport const runEffect = (hook) => {\r\n    return new Promise((resolve) => {\r\n        return resolve(hook())\r\n    });\r\n};","\r\nexport const createUseReducer = (element) => {\r\n    return (reducer, initialState) => {\r\n        if (typeof element._dynamicReducerState[element._reducerStateKey] === 'undefined') {\r\n            element._dynamicReducerState[element._reducerStateKey] = Object.assign({}, element._dynamicReducerState[element._reducerStateKey], initialState);\r\n        }\r\n\r\n        const currentStateKey = element._reducerStateKey;\r\n        const dispatch = (action) => {\r\n            // debugger;\r\n            const newState = reducer(element._dynamicReducerState[currentStateKey], action);\r\n            element._dynamicReducerState[currentStateKey] = Object.assign({}, element._dynamicReducerState[currentStateKey], newState);\r\n        };\r\n\r\n        const stateAndDispatch = [element._dynamicReducerState[element._reducerStateKey], dispatch];\r\n        element._reducerStateKey++;\r\n        return stateAndDispatch;\r\n    }\r\n};","export const createUseContext = (element) => {\r\n    return (context) => {\r\n        const { ['_contextName']: contextName, ...contextData } = element._context[context._contextName];\r\n        return contextData;\r\n    }\r\n};\r\n\r\nexport const createContextFactory = (dependencies) => {\r\n    const {directive, PropertyPart} = dependencies;\r\n    //createContext\r\n    return (defaultData) => {\r\n        const contextName = weakUUID();\r\n        const context = directive((contextData = defaultData) => (part) => {\r\n            if (!(part instanceof PropertyPart)) {\r\n                throw new Error('context directive can only be used in property bindings');\r\n            }\r\n\r\n            contextData._contextName = contextName;\r\n            part.setValue(contextData);\r\n            part.commit();\r\n            setContext(part.committer.element, contextData);\r\n        });\r\n        context._contextName = contextName;\r\n        return context;\r\n    };\r\n};\r\n\r\nconst setContext = (element, context) => {\r\n    if (isCustomElement(element.localName)) {\r\n        if (typeof element._context === 'undefined') element._context = {};\r\n        element._context[context._contextName] = context;\r\n    }\r\n\r\n    Array.from(element.children).forEach((child) => {\r\n        setContext(child, context);\r\n    })\r\n};\r\n\r\nconst isCustomElement = (elementName) => {\r\n    // Custom elements must have a dash in the name\r\n    return elementName.includes('-');\r\n};\r\n\r\nconst weakUUID = () => {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n        s4() + '-' + s4() + s4() + s4();\r\n};","export default (dependencies) => {\r\n    const { LitElement, createUseState, createUseEffect, runEffect, createUseReducer, createUseContext } = dependencies;\r\n\r\n    return (render, props = {}, styles = []) => {\r\n        return class extends LitElement {\r\n            static get properties() {\r\n                const dynamicState = {\r\n                    _dynamicState: {type: Object},\r\n                    _dynamicReducerState: {type: Object},\r\n                    _context: {type: Object}\r\n                };\r\n                return Object.assign({}, dynamicState, props);\r\n            }\r\n\r\n            static get styles() {\r\n                return styles;\r\n            }\r\n\r\n            constructor() {\r\n                super();\r\n                this._dynamicReducerState = {};\r\n                this._dynamicState = new Map();\r\n                this._context = {};\r\n\r\n                this._reducerStateKey = 0;\r\n                this._stateKey = 0;\r\n                this._hookKey = 0;\r\n                this._hooks = [];\r\n                this._hookState = [];\r\n            }\r\n\r\n            _resetHooks() {\r\n                this._stateKey = 0;\r\n                this._reducerStateKey = 0;\r\n                this._hookKey = 0;\r\n            }\r\n\r\n            _runEffects() {\r\n                this._hooks.forEach((effect) => {\r\n                    return new Promise((resolve) => {\r\n                        return resolve(effect())\r\n                    });\r\n                });\r\n            }\r\n\r\n            render() {\r\n                super.render();\r\n                this._resetHooks();\r\n                this._runEffects();\r\n                const hooks = {\r\n                    useState: createUseState(this),\r\n                    useEffect: createUseEffect(this),\r\n                    useReducer: createUseReducer(this),\r\n                    useContext: createUseContext(this)\r\n                };\r\n                return render(this, hooks);\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nclass HookManagement {\r\n    constructor() {\r\n        this._reducerStateKey = 0;\r\n        this._stateKey = 0;\r\n        this._hookKey = 0;\r\n\r\n        this._hooks = [];\r\n        this._hookState = [];\r\n    }\r\n\r\n    resetHooks() {\r\n        this._stateKey = 0;\r\n        this._reducerStateKey = 0;\r\n        this._hookKey = 0;\r\n    }\r\n\r\n    runEffects() {\r\n        this._hooks.forEach((effect) => {\r\n            return new Promise((resolve) => {\r\n                return resolve(effect())\r\n            });\r\n        });\r\n    }\r\n\r\n}","import { LitElement } from \"lit-element\";\r\nimport { directive, PropertyPart } from \"lit-html\";\r\n\r\nimport { createUseState } from \"./hooks/useState\";\r\nimport { createUseEffect, runEffect } from \"./hooks/useEffect\";\r\nimport { createUseReducer } from \"./hooks/useReducer\";\r\nimport { createUseContext, createContextFactory } from \"./hooks/useContext\";\r\n\r\nimport functionalElementFactory from './functionalElement';\r\n\r\nconst createContext = createContextFactory({directive, PropertyPart});\r\nconst functionalElement = functionalElementFactory({ LitElement, createUseState, createUseEffect, runEffect, createUseReducer, createUseContext });\r\n\r\nexport default functionalElement;\r\nexport { createContext };\r\nexport { css, html } from \"lit-element\";\r\n\r\n"],"names":["directives","WeakMap","directive","f","args","d","set","isDirective","o","has","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","currentNode","pop","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","innerHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","text","v","t","setAttribute","committer","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","__options","getOptions","event","call","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","templateCache","templateCaches","get","stringsArray","keyString","Map","key","join","render","firstChild","Object","assign","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","insertNodeIntoTemplate","refNode","insertCount","walkerIndex","walkerNode","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","styles","Set","from","querySelectorAll","add","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","condensedStyle","style","textContent","querySelector","nativeShadow","removes","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","litRender","delete","styleElement","_a","JSCompiler_renameProperty","prop","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","String","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_saveInstanceProperties","_v","_applyInstanceProperties","connectedCallback","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","propName","shouldRequestUpdate","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","textFromCSSResult","css","reduce","acc","idx","arrayFlat","flattenStyles","flat","LitElement","_styles","_getUniqueStyles","userStyles","flatStyles","styleSet","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","templateResult","createUseState","getState","_dynamicState","setState","newState","entries","defaultValue","currentStateKey","_stateKey","valueAndChanger","newValue","createUseEffect","effect","stateToWatch","_hookState","_hookKey","of","_hooks","runEffect","hook","createUseReducer","reducer","initialState","_dynamicReducerState","_reducerStateKey","stateAndDispatch","action","createUseContext","context","contextName","contextData","_context","_contextName","createContextFactory","dependencies","defaultData","weakUUID","setContext","isCustomElement","children","child","elementName","includes","s4","floor","substring","dynamicState","_resetHooks","_runEffects","hooks","useState","useEffect","useReducer","useContext","createContext","functionalElement","functionalElementFactory"],"mappings":"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"}